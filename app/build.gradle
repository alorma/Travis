apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.3"
  defaultConfig {
    applicationId "com.alorma.travisapp"
    minSdkVersion 21
    targetSdkVersion 25
    multiDexEnabled true
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'Lorg/intellij/lang/annotations/Identifier'
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
  implementation "org.jetbrains.anko:anko:$anko_version"

  def androidSupport = '25.4.0'
  implementation "com.android.support:design:$androidSupport"
  implementation "com.android.support:cardview-v7:$androidSupport"
  implementation "com.android.support:appcompat-v7:$androidSupport"
  implementation 'com.android.support.constraint:constraint-layout:1.0.2'

  def dagger = '2.11'
  implementation "com.google.dagger:dagger:${dagger}"
  kapt "com.google.dagger:dagger-compiler:${dagger}"

  def rxJava = '2.0.6'
  implementation "io.reactivex.rxjava2:rxjava:${rxJava}"
  implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

  def funktionale = '1.1'
  implementation "org.funktionale:funktionale-either:${funktionale}"

  testImplementation 'junit:junit:4.12'
  testImplementation 'org.assertj:assertj-core:3.8.0'

  testImplementation "org.mockito:mockito-core:2.8.9"
  androidTestImplementation "org.mockito:mockito-android:2.8.9"
  testImplementation("com.nhaarman:mockito-kotlin:1.5.0") {
    exclude group: 'org.jetbrains.kotlin'
  }

  def okHttp3 = '3.2.0'
  implementation "com.squareup.okhttp3:okhttp:${okHttp3}"

  def retrofit2 = '2.3.0'
  implementation "com.squareup.retrofit2:retrofit:${retrofit2}"
  implementation "com.squareup.retrofit2:converter-gson:${retrofit2}"
  implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit2}"

  def chuck = '1.0.4'
  debugImplementation "com.readystatesoftware.chuck:library:${chuck}"
  releaseImplementation "com.readystatesoftware.chuck:library-no-op:${chuck}"

  //WireMock
  androidTestImplementation("com.github.tomakehurst:wiremock:2.5.0") {
    exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    exclude group: 'org.ow2.asm', module: 'asm'
    exclude group: 'org.json', module: 'json'
  }
  androidTestImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'

  androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.6.6'
  androidTestImplementation('com.schibsted.spain:barista:1.3.0') {
    exclude group: 'com.android.support'
  }

  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })


  def arch = '1.0.0-alpha3'
  implementation "android.arch.lifecycle:runtime:${arch}"
  implementation "android.arch.lifecycle:extensions:${arch}"
  kapt "android.arch.lifecycle:compiler:${arch}"

  def room = '1.0.0-alpha3'
  implementation "android.arch.persistence.room:runtime:${room}"
  kapt "android.arch.persistence.room:compiler:${room}"
}
